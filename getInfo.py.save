#!/usr/bin/python
import sys
import Adafruit_DHT

import subprocess 
import re 
import os 
import time 
import MySQLdb as mdb 
import datetime
import bme280

databaseUsername="root"
databasePassword="am4408" 
databaseName="WeatherPI" #do not change unless you named the Wordpress database with some other name

sensor=Adafruit_DHT.DHT22 #if not using DHT22, replace with Adafruit_DHT.DHT11 or Adafruit_DHT.AM2302
pinNum=4 #if not using pin number 4, change here

def saveToDatabase(DHT22_temp,DHT22_hum,BME280_temp,BME280_hum,BME280_press):

	con=mdb.connect("localhost", databaseUsername, databasePassword, databaseName)
        currentDateTime=datetime.datetime.now()

        now=datetime.datetime.now()
        midnight=datetime.datetime.combine(now.date(),datetime.time())
        minutes=((now-midnight).seconds)/60 #minutes after midnight, use datead$

	
        with con:
                cur=con.cursor()
		
                cur.execute("INSERT INTO WeatherData (DHT22_temp,DHT22_hum, BME280_temp, BME280_hum, BME280_press, currentDateTime) VALUES (%s,%s,%s,%s,%s,%s)",(DHT22_temp,DHT22_hum,BME280_temp,BME280_hum,BME280_press,currentDateTime))

		print "Saved temperature"
		return "true"


def readInfo():

	DHT22_hum, DHT22_temp = Adafruit_DHT.read_retry(sensor, pinNum)#read_retry - retry getting temperatures for 15 times
	try: BME280_temp, BME280_press, BME280_hum = bme280.readBME280All()
	except IOError: 
		time.sleep(2)
		BME280_temp, BME280_press, BME280_hum = bme280.readBME280All()
        except IOError: 
		time.sleep(2)
        	BME280_temp, BME280_press, BME280_hum = bme280.readBME280All()
        except IOError: 
		time.sleep(2)
        	BME280_temp, BME280_press, BME280_hum = bme280.readBME280All()
        except IOError: 
		time.sleep(2)
        	BME280_temp, BME280_press, BME280_hum = bme280.readBME280All()
        except IOError: time.sleep(2)
	        BME280_temp, BME280_press, BME280_hum = bme280.readBME280All()
        except IOError: time.sleep(2)
       	 BME280_temp, BME280_press, BME280_hum = bme280.readBME280All()
        	except IOError: time.sleep(2)
        BME280_temp, BME280_press, BME280_hum = bme280.readBME280All()
        except IOError: time.sleep(2)
        BME280_temp, BME280_press, BME280_hum = bme280.readBME280All()
        except IOError: time.sleep(2)
        BME280_temp, BME280_press, BME280_hum = bme280.readBME280All()


	print "DHT 22 Temperature: %.1f C" % DHT22_temp
	print "DHT 22 Humidity:    %s %%" % DHT22_hum
	print "BME 280 Temperature: %.1f c" % BME280_temp
	print "BME 280 Humidity: %s %%" % BME280_hum
	print "BME 280 Pressure: %s" % BME280_press

	if DHT22_hum is not None and DHT22_temp is not None and BME280_temp is not None:
		return saveToDatabase(DHT22_temp,DHT22_hum,BME280_temp,BME280_hum,BME280_press) #success, save the readings
#       		 print 'klaar'
	else:
		print 'Failed to get reading. Try again!'
		sys.exit(1)


#check if table is created or if we need to create one
try:
	queryFile=file("createTable.sql","r")

	con=mdb.connect("localhost", databaseUsername,databasePassword,databaseName)
        currentDate=datetime.datetime.now().date()

        with con:
		line=queryFile.readline()
		query=""
		while(line!=""):
			query+=line
			line=queryFile.readline()
		
		cur=con.cursor()
		cur.execute(query)	

        	#now rename the file, because we do not need to recreate the table everytime this script is run
		queryFile.close()
        	os.rename("createTable.sql","createTable.sql.bkp")
	

except IOError:
	pass #table has already been created
	

status=readInfo() #get the readings
